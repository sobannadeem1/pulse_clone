import"./faceplate-date-eecb5fe9.js";import"./faceplate-timeago-30dcb7e7.js";import"./faceplate-dropdown-menu-ce2ff059.js";import"./faceplate-menu-70580087.js";import"./faceplate-shimmer-376b8b19.js";import"./faceplate-tooltip-39db132d.js";import"./post-mod-actions-menu-187ad885.js";import{f as t,c4 as e,bV as o,q as i,c as s,a as n,_ as a,n as r,t as d,e as l,r as p}from"./shell-97fd3bd7.js";import{x as c,c as h,I as m,y as u,c9 as b,aJ as v,aE as f,ah as y,ax as g,F as R,ca as A,i as S,s as w,j,L as k,A as $}from"./icon-6e78539e.js";import{M as C,A as O,i as P,s as x,a as I,b as U,c as M,d as B,e as E}from"./shreddit-post-73ddbe00.js";import{H as z}from"./mod-actions-menu-dc9945fc.js";import{C as V}from"./comment-4f666a21.js";import{M as T}from"./modActions-fed0f42b.js";import{P as D}from"./post-0923bbed.js";import{P as F}from"./postUpdate-8ca75f4f.js";import"./shreddit-comment-share-button-b6a46de9.js";import"./shreddit-post-share-button-442e4f97.js";import"./locale-e49f0b05.js";import"./relative-date-77173042.js";import"./cached-intl-e5b35306.js";import"./popper-controller-1fb20141.js";import"./makeEventDispatcher-28989282.js";import"./list-item-5402a18e.js";import"./faceplate-number-d03c87b2.js";import"./number-ea0536b9.js";import"./content-action-button-1a352624.js";import"./award-controller-98663d86.js";import"./award-0a36dd03.js";import"./awardsTelemetryState-6bc10f54.js";import"./rpl-tooltip-5d523a91.js";import"./contains-1042b204.js";import"./localStorageByUser-b42ae06f.js";import"./sleep-a1fd43c3.js";import"./content-tags-95a5dd5f.js";import"./custom-event-8a5c1c61.js";import"./add-removal-reason-modal-343292be.js";import"./modActions-809aa1ca.js";import"./keyed-f824b392.js";import"./faceplate-form-e41fcc5c.js";import"./form-common-utils-3a6d5fab.js";import"./post-5a1bce5f.js";import"./faceplate-input-35f305aa.js";import"./input-element-c3273c12.js";import"./dropdownButton-6f244e38.js";import"./faceplate-modal-8fdeb7ac.js";import"./faceplate-textarea-input-a68ea248.js";import"./live-978a02ee.js";import"./text-input-e49faaea.js";import"./constants-95a2ecae.js";import"./remove-highlighted-post-438e315a.js";import"./utils-147dae00.js";import"./pdp-a697afbf.js";import"./throttle-cde4a556.js";import"./click-card-fb606e2e.js";import"./faceplate-hovercard-eb17f52a.js";import"./outbound-link-tracking-controller-00ec0484.js";import"./utils-49bdc0e1.js";import"./with-share-7b821f94.js";import"./a-a70bf2df.js";import"./index-6b6f75e3.js";import"./events-82e64833.js";import"./overflow-menu-actions-e2cd8835.js";import"./shreddit-overflow-report-599e9771.js";import"./v2-events-947b4110.js";import"./index-16432d42.js";import"./lexical-1c245d48.js";import"./display-theme-7e251d41.js";import"./rtjson-d7db35d6.js";import"./classnameUtils-e77f7123.js";import"./faceplate-carousel-clone-91917a6e.js";import"./faceplate-pagination-indicator-48962bdd.js";import"./TinyGesture-6f7cc1aa.js";import"./index-b5439860.js";import"./faceplate-bottom-sheet-bd14a9d4.js";import"./faceplate-bottom-sheet-header-16ee3868.js";import"./comments-54039841.js";let H=class extends(t(w)){constructor(){super(...arguments),this.feedViewType=e.ModQueueCompactView,this.viewContext=D.CommentsPage,this.itemState=C.UNMODERATED,this.hasReports=!1,this.isModMode=!1,this.isRemoved=!1,this.isDeleted=!1,this.isLocked=!1,this.isStickied=!1,this.isHighlighted=!1,this.isCurrentUserAuthor=!1,this.hasParent=!1,this.isIconOnly=!1,this.hasRemovalReason=!1,this.permalink="",this.isDesktopViewport=!1,this.isSpamFilteredPost=!1,this.isProfilePost=!1,this.isPromotedPost=!1,this.hasFlairPermissions=!1,this.areHighlightsEnabled=!1,this.borderedActionBar=!1,this.hideInlineActions=!1,this.moderationState=C.UNMODERATED,this._handleThingUpdate=t=>{let e="";if("awardOnContentId"in t?e=t.awardOnContentId:"commentId"in t?e=t.commentId:"postId"in t&&(e=t.postId),e!==this.thingId)return;const{value:o}=t;switch(t.action){case F.approve:case V.approve:case O.approve:this.hasRemovalReason=!1,this.isRemoved=!1,this.moderationState=C.APPROVED;break;case F.remove:case F.removeAsSpam:case F.confirmRemoval:case V.remove:case V.removeAsSpam:case V.confirmRemoval:case O.remove:case O.confirmRemoval:this.isRemoved=!0,this.moderationState=C.REMOVED;break;case F.addRemovalReason:case V.addRemovalReason:this.hasRemovalReason=!0;break;case F.updateHighlightedPost:this.isHighlighted=o;break;case F.lock:case V.lock:this.isLocked=o;break;case F.delete:this.isDeleted=o;break;case F.sticky:case V.sticky:this.isStickied=o}}}get itemType(){return this.thingId?P(this.thingId):null}get isPost(){return this.itemType===o.Post}get isCompactView(){return this.feedViewType===e.CompactView}get isOnModqueuePage(){return this.viewContext===D.ModQueue||this.viewContext===D.ModQueueAll}get isApproved(){return this.moderationState===C.APPROVED}get shouldShowConfirmRemoval(){return x(this.moderationState,this.isSpamFilteredPost)}get shouldShowActionInline(){return I(this.viewContext,this.feedViewType)&&!this.isIconOnly&&!this.hideInlineActions}get isStickyable(){const t=!(this.viewContext===D.ProfileFeed||this.viewContext===D.ProfileFeed2),e=this.isCurrentUserAuthor&&!this.hasParent;return this.isPost?t:t&&e}get itemTopic(){switch(this.itemType){case o.Award:return i.AwardOnContentUpdated;case o.Comment:return i.CommentUpdated;case o.Post:return i.PostUpdated;default:return null}}connectedCallback(){super.connectedCallback(),this.moderationState=this.itemState,this.itemTopic&&this.subscribe(this.itemTopic,this._handleThingUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.itemTopic&&this.unsubscribe(this.itemTopic,this._handleThingUpdate)}getApproveButtonAppearance(){return this.isCompactView?this.borderedActionBar?"bordered":"secondary":this.shouldShowConfirmRemoval||this.hasReports?"primary":(this.moderationState,C.REMOVED,"secondary")}renderApproveAction(){return(this.isModMode||this.isOnModqueuePage)&&U(this.moderationState)?c`\n <mod-action-button \n aria-label="Approve content" \n data-mod-action="${T.ApproveContent}" \n button-appearance="${this.getApproveButtonAppearance()}" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${h({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">Approve</span>\n </mod-action-button>\n `:null}getRemoveButtonAppearance(){return this.isCompactView?this.borderedActionBar?"bordered":"secondary":(this.isApproved||this.hasReports,"secondary")}renderRemoveAction(){return(this.isModMode||this.isOnModqueuePage)&&M(this.moderationState)?c`\n <mod-action-button \n aria-label="Remove content" \n data-mod-action="${T.RemoveContent}" \n button-appearance="${this.getRemoveButtonAppearance()}" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${u({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Remove\n </span>\n </mod-action-button>\n `:null}renderConfirmRemovalAction(){return(this.isModMode||this.isOnModqueuePage)&&this.shouldShowConfirmRemoval?c`\n <mod-action-button \n aria-label="Confirm Removal" \n data-mod-action="${T.ConfirmRemoval}" \n button-appearance="secondary" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${u({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Confirm Removal\n </span>\n </mod-action-button>\n `:null}renderSpamAction(){return B({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline?c`\n <mod-action-button \n aria-label="Remove content as spam" \n data-mod-action="${T.RemoveContentAsSpam}" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${b({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Spam\n </span>\n </mod-action-button>\n `:null}renderFlairAction(){return this.isPost&&this.shouldShowActionInline?c` <mod-action-button \n aria-label="Open post flair modal" \n data-mod-action="${T.OpenEditPostFlairModal}" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${v({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Flair\n </span>\n </mod-action-button>`:null}getAddRemovalReasonButtonAppearance(){return this.isCompactView&&this.borderedActionBar?"bordered":"secondary"}renderAddRemovalReasonAction(){return(this.isModMode||this.isOnModqueuePage)&&this.itemType!==o.Award&&E(this.moderationState,this.hasRemovalReason,this.isSpamFilteredPost,this.isProfilePost)?c`\n <mod-action-button \n aria-label="Add removal reason" \n data-mod-action="${T.AddRemovalReason}" \n button-appearance="${this.getAddRemovalReasonButtonAppearance()}" \n ?show-full-buttons="${!0}" \n>\n <span slot="icon" class="flex justify-center" \n>${f({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Add removal reason\n </span>\n </mod-action-button>\n ${this.isIconOnly?c`<div class="separator"></div>`:null}\n `:null}renderCopyLinkAction(){return this.shouldShowActionInline?this.isPost?c`<shreddit-post-share-button \n ?use-button="${!0}" \n ?is-desktop-viewport="${this.isDesktopViewport}" \n permalink="${this.permalink}" \n size="${s.Small}" \n ?show-full-buttons="${!this.isIconOnly}" \n></shreddit-post-share-button>`:c`<shreddit-comment-share-button \n slot="comment-share" \n ?use-button="${!0}" \n ?is-desktop-viewport="${this.isDesktopViewport}" \n permalink="${this.permalink}" \n ?show-full-buttons="${!this.isIconOnly}" \n></shreddit-comment-share-button>`:null}renderLockAction(){if(!this.shouldShowActionInline||this.isLocked)return null;const t="Lock";return c` <mod-action-button \n aria-label="${t}" \n data-mod-action="${T.Lock}" \n event-noun="lock" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${y({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderUnlockAction(){if(!this.shouldShowActionInline||!this.isLocked)return null;const t="Unlock";return c` <mod-action-button \n aria-label="${t}" \n data-mod-action="${T.Unlock}" \n event-noun="unlock" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${g({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderStickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||this.isStickied||this.areHighlightsEnabled)return null;const t="Sticky";return c` <mod-action-button \n aria-label="${t}" \n data-mod-action="${T.Sticky}" \n event-noun="sticky" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${R({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderUnstickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.isStickied||this.areHighlightsEnabled)return null;const t="Unsticky";return c` <mod-action-button \n aria-label="${t}" \n data-mod-action="${T.Unsticky}" \n event-noun="unsticky" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${A({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderAddToHighlightsAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.areHighlightsEnabled||!z.has(this.viewContext)||this.isHighlighted)return null;const t="Add to highlights";return c` <mod-action-button \n aria-label="${t}" \n data-mod-action="${T.UpdateHighlightedPost}" \n event-noun="highlight" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${R({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderRemoveFromHighlightsAction(){if(!(this.isStickyable&&this.shouldShowActionInline&&this.areHighlightsEnabled&&z.has(this.viewContext)&&this.isHighlighted))return null;const t="Remove from highlights";return c` <mod-action-button \n aria-label="${t}" \n data-mod-action="${T.RemoveHighlightedPost}" \n event-noun="unhighlight" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${A({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}render(){return c`\n ${this.renderAddRemovalReasonAction()} ${this.renderApproveAction()}\n ${this.renderRemoveAction()} ${this.renderConfirmRemovalAction()} ${this.renderSpamAction()}\n ${this.renderFlairAction()} ${this.renderLockAction()} ${this.renderUnlockAction()}\n ${this.renderCopyLinkAction()} ${this.renderStickyAction()} ${this.renderUnstickyAction()}\n ${this.renderAddToHighlightsAction()} ${this.renderRemoveFromHighlightsAction()}\n `}};H.styles=[n,S`:host{display:flex;gap:var(--spacer-xs)}.separator{border-left:1px solid rgb(0,0,0,.1);width:1px;height:32px}`],a([r({type:String,attribute:"thing-id"})],H.prototype,"thingId",void 0),a([r({type:String,attribute:"feed-view-type"})],H.prototype,"feedViewType",void 0),a([r({type:String,attribute:"view-context"})],H.prototype,"viewContext",void 0),a([r({type:String,attribute:"item-state"})],H.prototype,"itemState",void 0),a([r({type:Boolean,attribute:"has-reports"})],H.prototype,"hasReports",void 0),a([r({type:Boolean,attribute:"mod-mode"})],H.prototype,"isModMode",void 0),a([r({type:Boolean,attribute:"removed"})],H.prototype,"isRemoved",void 0),a([r({type:Boolean,attribute:"deleted"})],H.prototype,"isDeleted",void 0),a([r({type:Boolean,attribute:"locked"})],H.prototype,"isLocked",void 0),a([r({type:Boolean,attribute:"stickied"})],H.prototype,"isStickied",void 0),a([r({type:Boolean,attribute:"highlighted"})],H.prototype,"isHighlighted",void 0),a([r({type:Boolean,attribute:"current-user-author"})],H.prototype,"isCurrentUserAuthor",void 0),a([r({type:Boolean,attribute:"has-parent"})],H.prototype,"hasParent",void 0),a([r({type:Boolean,attribute:"icon-only"})],H.prototype,"isIconOnly",void 0),a([r({type:Boolean,attribute:"has-removal-reason"})],H.prototype,"hasRemovalReason",void 0),a([r({type:String,attribute:"permalink"})],H.prototype,"permalink",void 0),a([r({type:Boolean,attribute:"is-desktop-viewport"})],H.prototype,"isDesktopViewport",void 0),a([r({type:Boolean,attribute:"is-spam-filtered-post"})],H.prototype,"isSpamFilteredPost",void 0),a([r({type:Boolean,attribute:"is-profile-post"})],H.prototype,"isProfilePost",void 0),a([r({type:Boolean,attribute:"is-promoted-post"})],H.prototype,"isPromotedPost",void 0),a([r({type:Boolean,attribute:"has-flair-permissions"})],H.prototype,"hasFlairPermissions",void 0),a([r({type:Boolean,attribute:"highlights-enabled"})],H.prototype,"areHighlightsEnabled",void 0),a([r({type:Boolean,attribute:"bordered-action-bar"})],H.prototype,"borderedActionBar",void 0),a([r({type:Boolean,attribute:"hide-inline-actions"})],H.prototype,"hideInlineActions",void 0),a([d()],H.prototype,"moderationState",void 0),H=a([l("shreddit-mod-inline-actions")],H);const L=t(w);let W=class extends L{constructor(){super(...arguments),this.parentOfModVerdictSlotElementWidth=0,this.removed=!1,this.thingId="",this.shouldIgnoreParentWidth=!1,this.minWidthToShowLabel=460,this.onCommentUpdateAction=t=>{if(t.commentId!==this.thingId)return;const{action:e}=t;switch(e){case V.approve:this.removed=!1;break;case V.remove:case V.removeAsSpam:case V.confirmRemoval:this.removed=!0}},this.onPostUpdateAction=t=>{if(t.postId!==this.thingId)return;const{action:e}=t;switch(e){case F.approve:this.removed=!1;break;case F.remove:case F.removeAsSpam:case F.confirmRemoval:this.removed=!0}},this.onAwardOnContentUpdateAction=t=>{if(t.awardOnContentId!==this.thingId)return;const{action:e}=t;switch(e){case O.approve:this.removed=!1;break;case O.remove:case O.confirmRemoval:this.removed=!0}}}connectedCallback(){super.connectedCallback(),this.initializeResizeObserver(),this.subscribe(i.PostUpdated,this.onPostUpdateAction),this.subscribe(i.CommentUpdated,this.onCommentUpdateAction),this.subscribe(i.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}disconnectedCallback(){this.cleanupResizeObserver(),super.disconnectedCallback(),this.unsubscribe(i.PostUpdated,this.onPostUpdateAction),this.unsubscribe(i.CommentUpdated,this.onCommentUpdateAction),this.unsubscribe(i.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}initializeResizeObserver(){this.parentOfModVerdictSlotElement=this.closest('[slot="mod-verdict"]')?.parentElement,this.parentOfModVerdictSlotElement&&(this.resizeObserver=new ResizeObserver((t=>{for(const e of t)this.parentOfModVerdictSlotElementWidth=e.contentRect.width})),this.resizeObserver.observe(this.parentOfModVerdictSlotElement))}cleanupResizeObserver(){this.resizeObserver&&this.parentOfModVerdictSlotElement&&this.resizeObserver.unobserve(this.parentOfModVerdictSlotElement)}render(){return c`\n <span class="inline-flex items-center gap-xs text-12 text-neutral-content w-full">\n <div class="relative">\n <slot name="verdict-indicator-avatar"></slot>\n <div \n aria-hidden="true" \n class="absolute bottom-0 -right-px flex justify-center items-center h-md w-md rounded-full border-solid border-md border-neutral-background scale-75 origin-bottom-right translate-y-px ${this.removed?"bg-red-200 text-red-700":"bg-kiwigreen-200 text-kiwigreen-700"}" \n>\n ${this.removed?k({size:m.ExtraSmall}):j({size:m.ExtraSmall})}\n </div>\n </div>\n ${this.shouldShowLabel?c`<slot name="verdict-indicator-label"></slot>`:""}\n </span>\n `}get shouldShowLabel(){return this.shouldIgnoreParentWidth||this.parentOfModVerdictSlotElementWidth>=this.minWidthToShowLabel}};W.styles=[n],a([d()],W.prototype,"parentOfModVerdictSlotElementWidth",void 0),a([d()],W.prototype,"parentOfModVerdictSlotElement",void 0),a([r({type:Boolean,reflect:!0})],W.prototype,"removed",void 0),a([r({type:String,attribute:"thing-id"})],W.prototype,"thingId",void 0),a([r({type:Boolean,attribute:"ignore-parent-width"})],W.prototype,"shouldIgnoreParentWidth",void 0),W=a([l("mod-verdict-indicator-component")],W);let q=class extends w{constructor(){super(...arguments),this.iconOnly=!1,this.pubsub=new p(this),this.handleCommentUpdate=({commentId:t,action:e,value:o})=>{if(t===this.thingId)switch(e){case V.addRemovalReason:this.hasRemovalReason=Boolean(o);break;case V.approve:this.hasRemovalReason=!0,this.isRemoved=!1;break;case V.remove:case V.removeAsSpam:this.hasRemovalReason=!1,this.isRemoved=!0}},this.handlePostUpdate=({postId:t,action:e,value:o})=>{if(t===this.thingId)switch(e){case F.addRemovalReason:this.hasRemovalReason=Boolean(o);break;case F.approve:this.hasRemovalReason=!0,this.isRemoved=!1;break;case F.remove:case F.removeAsSpam:this.isRemoved=!0,this.hasRemovalReason=!1}},this.updateModVerdict=t=>{const e=this.closest('[slot="mod-verdict"]');t&&this.isRemoved?e?.setAttribute("show-removal-reason-cta",""):e?.removeAttribute("show-removal-reason-cta")},this.shouldShowCta=()=>{const t=this.isRemoved?C.REMOVED:C.UNMODERATED;return E(t,!!this.hasRemovalReason,!!this.isContentSpamFilteredPost,this.isProfilePost)}}connectedCallback(){super.connectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver=new ResizeObserver((t=>{for(const e of t)e.contentRect.width<500?this.iconOnly=!0:this.iconOnly=!1})),this.resizeObserver.observe(t),this.pubsub.subscribe(i.CommentUpdated,this.handleCommentUpdate),this.pubsub.subscribe(i.PostUpdated,this.handlePostUpdate),this.updateModVerdict(!this.hasRemovalReason)}disconnectedCallback(){super.disconnectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver.unobserve(t),this.resizeObserver.disconnect(),this.pubsub.unsubscribe(i.CommentUpdated,this.handleCommentUpdate),this.pubsub.unsubscribe(i.PostUpdated,this.handlePostUpdate)}updated(t){super.updated(t),t.has("hasRemovalReason")&&this.updateModVerdict(!this.hasRemovalReason)}render(){return this.hasRemovalReason||!this.shouldShowCta()?$:c`\n <mod-action-button \n aria-label="Add removal reason" \n data-mod-action="${T.AddRemovalReason}" \n button-appearance="secondary" \n ?show-full-buttons="${!0}" \n>\n <span slot="icon" class="flex justify-center">\n ${f({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text" class="flex">\n ${this.iconOnly?f({attributes:{"aria-hidden":"true"},size:m.Small}):"Add removal reason"}\n </span>\n </mod-action-button>\n `}};q.styles=[n],a([r({type:String,attribute:"thing-id"})],q.prototype,"thingId",void 0),a([r({type:Boolean,attribute:"has-removal-reason"})],q.prototype,"hasRemovalReason",void 0),a([d()],q.prototype,"iconOnly",void 0),a([r({type:Boolean,attribute:"is-removed"})],q.prototype,"isRemoved",void 0),a([r({type:Boolean,attribute:"is-content-spam-filtered-post"})],q.prototype,"isContentSpamFilteredPost",void 0),a([r({type:Boolean,attribute:"is-profile-post"})],q.prototype,"isProfilePost",void 0),q=a([l("responsive-add-removal-reason-cta")],q);
//# sourceMappingURL=mod-inline-actions-client-js-413c88b6.js.map
